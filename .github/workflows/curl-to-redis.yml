name: Node.js API Test Redis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-api:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --name test-redis-server
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Wait for Redis service
        run: |
          echo "Waiting for Redis..."
          for i in $(seq 1 10); do
            if docker exec test-redis-server redis-cli ping | grep -q PONG; then
              echo "Redis is ready!"
              exit 0
            fi
            echo "Attempt $i failed, retrying..."
            sleep 5
          done
          echo "Redis did not start"
          exit 1

      - name: Build Node.js Docker image
        run: docker build -t my-app .

      - name: Start Node.js container
        run: |
          docker run -d \
            --name app-node \
            -p 3000:3000 \
            -e REDIS_HOST=redis \
            my-app

      - name: Wait for Node.js app
        run: |
          API_URL="http://127.0.0.1:3000/api/x-transaction-redis"
          for i in $(seq 1 20); do
            if curl -s $API_URL >/dev/null; then
              echo "App-node is ready!"
              break
            fi
            echo "Attempt $i: App not ready yet..."
            sleep 5
          done

      - name: Run API tests
        run: |
          API_URL="http://127.0.0.1:3000/api/x-transaction-redis"
          API_BYPASS_URL="http://127.0.0.1:3000/api/bypass"

          for url in $API_URL $API_URL $API_URL $API_BYPASS_URL $API_BYPASS_URL $API_BYPASS_URL; do
            RESPONSE=$(curl -s -X POST $url \
              -H "Content-Type: application/json" \
              -H "x-transaction-id: 2025-08-14" \
              -d '{"message":"Test from CI/CD"}')
            echo "Response from $url: $RESPONSE"
          done

      - name: Cleanup containers
        if: always()
        run: |
          docker stop app-node
          docker rm app-node
