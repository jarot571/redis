name: Node.js API Test Redis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-api:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --name test-redis-server
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        # with:
        #   path: ./redis

      - name: Build application Docker image
        run: docker build -t my-app .

      - name: Start application container
        run: |
          docker run \
            -d \
            --name app-node \
            --network host \
            -e REDIS_HOST=127.0.0.1 \
            -p 3000:3000 \
            my-app
      # - name: Wait for services to be ready
      #   run: sleep 10

      # - name: Run API tests
      #   working-directory: .
      #   run: npm test

      # - name: Run API tests with Curl
      #   run: |
      #     sudo apt update
      #     #apt-get update && apt-get install -y curl
      #     API_URL="http://app-node:3000/api/x-transaction-redis"
          
      #     echo "--- Testing POST request ---"
      #     RESPONSE=$(curl -s -X POST $API_URL \
      #       -H "Content-Type: application/json" \
      #       -H "x-transaction-id: simple-test" \
      #       -d '{"message":"Hello from CI/CD"}'
      #     )
      #     echo "Response: $RESPONSE"
          
      #     if [[ $RESPONSE == *\"status\":\"00 Success\"* ]]; then
      #       echo "Test Passed: API returned success status."
      #     else
      #       echo "Test Failed: Expected '00 Success', got '$RESPONSE'"
      #       exit 1
      #     fi

          
      - name: Cleanup containers
        if: always()
        run: |
          docker stop app-node
          docker rm app-node